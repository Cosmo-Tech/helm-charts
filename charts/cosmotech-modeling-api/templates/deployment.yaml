# SPDX-FileCopyrightText: Copyright (C) 2023-2025 Cosmo Tech
# SPDX-License-Identifier: LicenseRef-CosmoTech
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cosmotech-modeling-api.fullname" . }}
  labels:
    {{- include "cosmotech-modeling-api.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "cosmotech-modeling-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/registry_secrets.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "cosmotech-modeling-api.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: {{ include "cosmotech-modeling-api.imagePullSecretName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "cosmotech-modeling-api.fullname" . }}-config
      {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "cosmotech-modeling-api.fullname" . }}-data
      {{- end }}
      containers:
        - name: cosmotech-modeling-api
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ include "cosmotech-modeling-api.appVersion" . }}"
          command:
            - csm-modeling-server
            - --property
            - csm.modelingapi.data.path={{ include "cosmotech-modeling-api.dataPersistencePath" . }}
            - --property
            - csm.modelingapi.buildimage.repository={{ .Values.image.repository }}
            - --property
            - csm.modelingapi.buildimage.pullsecret={{ include "cosmotech-modeling-api.imagePullSecretName" . }}
            {{- if empty (((.Values.config.csm).modelingApi).simulatorRegistry).pushSecret }}
            - --property
            - csm.modelingapi.simulatorregistry.pushsecret={{ include "cosmotech-modeling-api.simulatorRegistryPushSecretName" . }}
            {{- end }}
            - --property-file
            - /etc/csm-modeling-server/config.yaml
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: metrics
              containerPort: 9100
              protocol: TCP
          {{- with .Values.extraEnv.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.extraEnv.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/csm-modeling-server
              readOnly: true
          {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: {{ include "cosmotech-modeling-api.dataPersistencePath" . }}
              readOnly: false
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
