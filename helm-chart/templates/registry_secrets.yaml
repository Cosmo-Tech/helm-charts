# SPDX-FileCopyrightText: Copyright (C) 2023-2025 Cosmo Tech
# SPDX-License-Identifier: LicenseRef-CosmoTech
{{- define "cosmotech-modeling-api.registrySecret" }}
{{- $existingSecret := lookup "v1" "Secret" .globals.Release.Namespace .secretName }}
{{- $credentialsInValues := or .credentials.registry .credentials.username .credentials.password }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .secretName }}
  labels:
    {{- include "cosmotech-modeling-api.labels" .globals | nindent 4 }}
type: kubernetes.io/dockerconfigjson
{{- if and $existingSecret (not $credentialsInValues) }}
data:
  {{- toYaml $existingSecret.data | nindent 2 }}
{{- else }}
stringData:
  .dockerconfigjson: |
    {
      "auths":
      {
        "{{ .credentials.registry }}":
        {
          "auth": "{{ printf "%s:%s" .credentials.username .credentials.password | b64enc }}"
        }
      }
    }
{{- end }}
{{- end }}

{{- if empty .Values.image.credentials.pullSecret }}
{{- $secretData := dict }}
{{- $_ := set $secretData "secretName" (include "cosmotech-modeling-api.imagePullSecretName" .) }}
{{- $_ := set $secretData "credentials" .Values.image.credentials }}
{{- $_ := set $secretData "globals" . }}
{{- include "cosmotech-modeling-api.registrySecret" $secretData }}
{{- end }}

{{- if empty (((.Values.config.csm).modelingApi).simulatorRegistry).pushSecret }}
{{- $secretData := dict }}
{{- $_ := set $secretData "secretName" (include "cosmotech-modeling-api.simulatorRegistryPushSecretName" .) }}
{{- $_ := set $secretData "credentials" .Values.simulatorRegistryCredentials }}
{{- $_ := set $secretData "globals" . }}
{{- include "cosmotech-modeling-api.registrySecret" $secretData }}
{{- end }}
