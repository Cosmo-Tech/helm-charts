# SPDX-FileCopyrightText: Copyright (C) 2023-2025 Cosmo Tech
# SPDX-License-Identifier: LicenseRef-CosmoTech
# -- Base name override
nameOverride: cosmotech-modeling-api
# -- Full name override
fullNameOverride: ""

image:
  # -- Image repository
  repository: ghcr.io/cosmo-tech/cosmotech-modeling-api
  # -- Image tag
  tag: "latest"
  # -- Image pull policy
  pullPolicy: Always
  credentials:
    # -- Existing image pull secret
    pullSecret: ""
    # -- Registry name for the generated pull secret auth config.
    # Only applies if `pullSecret` is empty.
    # If `registry`, `username` and `password` are all empty, the generated secret is only created if not already there.
    registry: ""
    # -- Username for the generated pull secret auth config.
    # Only applies if `pullSecret` is empty.
    # If `registry`, `username` and `password` are all empty, the generated secret is only created if not already there.
    username: ""
    # -- Password for the generated pull secret auth config.
    # Only applies if `pullSecret` is empty.
    # If `registry`, `username` and `password` are all empty, the generated secret is only created if not already there.
    password: ""

service:
  # -- Service type
  type: ClusterIP
  # -- Service port number
  port: 8080

serviceMonitor:
  # -- Enable monitoring service
  enabled: false
  # -- Namespace to deploy the monitoring service to
  namespace: ""
  # -- Monitoring service port number
  port: 9100

# -- Additional pod annotations
podAnnotations: {}

# -- Security context injected at pod level
podSecurityContext:
  fsGroupChangePolicy: Always
  sysctls: []
  supplementalGroups: []
  fsGroup: 1001

# -- Security context injected at container level
containerSecurityContext:
  runAsGroup: 1001
  runAsNonRoot: true
  runAsUser: 1001
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  privileged: false
  readOnlyRootFilesystem: true
  seLinuxOptions: {}
  seccompProfile:
    type: RuntimeDefault

# -- Resources values
resources:
  limits:
    cpu: "1"
    memory: 256Mi
  requests:
    cpu: "1"
    memory: 256Mi

# -- Node selector values
nodeSelector: {}
# -- Tolerations values
tolerations: []
# -- Affinity values
affinity: {}

persistence:
  # -- Enable the data storage persistence
  enabled: true
  # -- PVC size request
  size: 8Gi
  # -- PVC storage class
  storageClass: ""

extraEnv:
  # -- Extra environment values, as 'env' form
  env: []
  # -- Extra environment values, as 'envFrom' form
  envFrom: []

# -- Auth data for the generated simulator registry credentials
# Only applies if `config.csm.modelingApi.simulatorRegistry.pushSecret` is empty
# (Note that while the API accepts case-insensitive entries, this chart will look for that exact spelling).
# If this secret is generated by the chart, the associated application property value will automatically be setup.
# If `registry`, `username` and `password` are all empty, the generated secret is only created if not already there.
simulatorRegistryCredentials:
  # -- Registry for the generated simulator registry credentials
  registry: ""
  # -- Username for the generated simulator registry credentials
  username: ""
  # -- Password for generated simulator registry credentials
  password: ""

# -- API configuration
config: {}
