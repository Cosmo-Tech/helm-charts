# SPDX-FileCopyrightText: Copyright (C) 2023-2024 Cosmo Tech
# SPDX-License-Identifier: LicenseRef-CosmoTech
name: Package chart and deploy

on:
  workflow_dispatch:
  push:
    tags:
      - '*'
    branches:
      - main
    paths:
      - ".github/workflows/**"
      - "helm-chart/**"

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: azure/setup-helm@v4
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install -y reuse

      - name: Helm lint
        working-directory: helm-chart
        run: |
          helm lint --strict .

      - name: Reuse lint
        run: |
          reuse lint

      - name: Compute chart version
        run: |
          echo "CHART_VERSION=${{ github.ref_type == 'branch' && '0.0-' || '' }}${{ github.ref_name }}" >> "$GITHUB_ENV"

      - name: Helm package
        working-directory: helm-chart
        run: |
          helm package --version $CHART_VERSION .

      - name: Login to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | \
            helm registry login ghcr.io \
              --username "${{ github.actor }}" \
              --password-stdin

      - name: Helm push
        working-directory: helm-chart
        run: |
          helm push cosmotech-modeling-api-chart-$CHART_VERSION.tgz oci://ghcr.io/cosmo-tech

  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - package
    strategy:
      fail-fast: false
      matrix:
        imageTag:
          - continuous
          - nightly
    steps:
      - uses: actions/checkout@v4

      - uses: azure/setup-helm@v4
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"

      - uses: azure/login@v2
        with:
          creds: "${{ secrets.AZURE_CREDENTIALS }}"

      - uses: azure/aks-set-context@v4
        with:
          cluster-name: "${{ vars.CLUSTER_NAME }}"
          resource-group: "${{ vars.CLUSTER_RESOURCE_GROUP }}"

      - name: Compute chart version
        run: |
          echo "CHART_VERSION=0.0-main" >> "$GITHUB_ENV"

      - name: Login to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | \
            helm registry login ghcr.io \
              --username "${{ github.actor }}" \
              --password-stdin

      - name: Helm upgrade/install
        working-directory: helm-chart
        run: |
          helm upgrade --install \
            --wait \
            --namespace ${{ vars.CLUSTER_NAMESPACE }} \
            --values values-dev.yaml \
            --set image.tag="${{ matrix.imageTag }}" \
            --set image.credentials.username="${{ secrets.GHCR_CREDENTIALS_USERNAME }}" \
            --set image.credentials.password="${{ secrets.GHCR_CREDENTIALS_PASSWORD }}" \
            cosmotech-modeling-api-${{ matrix.imageTag }} \
            oci://ghcr.io/cosmo-tech/cosmotech-modeling-api-chart \
            --version $CHART_VERSION

      - name: Helm test
        run: |
          helm test --namespace ${{ vars.CLUSTER_NAMESPACE }} cosmotech-modeling-api-${{ matrix.imageTag }}
