# SPDX-FileCopyrightText: Copyright (C) 2023-2025 Cosmo Tech
# SPDX-License-Identifier: LicenseRef-CosmoTech
name: Package chart and deploy

on:
  workflow_dispatch:
  push:
    tags:
      - '*'
    branches:
      - main

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: azure/setup-helm@v4

      - name: Helm lint
        working-directory: helm-chart
        run: |
          helm lint --strict .

      - name: Reuse lint
        run: |
          pip install reuse
          reuse lint

      - name: Compute chart version
        run: |
          echo "CHART_VERSION=${{ github.ref_type == 'branch' && '0.0-' || '' }}${{ github.ref_name }}" >> "$GITHUB_ENV"

      - name: Helm package
        working-directory: helm-chart
        run: |
          helm package --version $CHART_VERSION .

      - name: Login to GitHub Container Registry
        run: >
          echo "${{ secrets.GITHUB_TOKEN }}" |
          helm registry login ghcr.io
          --username "${{ github.actor }}"
          --password-stdin

      - name: Helm push
        working-directory: helm-chart
        run: |
          helm push cosmotech-modeling-api-chart-$CHART_VERSION.tgz oci://ghcr.io/cosmo-tech

  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - package
    strategy:
      fail-fast: false
      matrix:
        imageTag:
          - continuous
          - nightly
    steps:
      - uses: actions/checkout@v4

      - uses: azure/setup-helm@v4

      - uses: azure/login@v2
        with:
          creds: "${{ secrets.AZURE_CREDENTIALS }}"

      - uses: azure/use-kubelogin@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          kubelogin-version: 'latest'

      - uses: azure/aks-set-context@v4
        with:
          cluster-name: "${{ vars.CLUSTER_NAME }}"
          resource-group: "${{ vars.CLUSTER_RESOURCE_GROUP }}"
          use-kubelogin: true

      - name: Compute chart version
        run: |
          echo "CHART_VERSION=0.0-main" >> "$GITHUB_ENV"

      - name: Login to GitHub Container Registry
        run: >
          echo "${{ secrets.GITHUB_TOKEN }}" |
          helm registry login ghcr.io
          --username "${{ github.actor }}"
          --password-stdin

      - name: Setup image pull secret
        uses: azure/k8s-create-secret@v5
        with:
          namespace: ${{ vars.CLUSTER_NAMESPACE }}
          secret-name: cosmotech-modeling-api-image-secret-${{ matrix.imageTag }}
          container-registry-url: ghcr.io
          container-registry-username: ${{ secrets.GHCR_CREDENTIALS_USERNAME }}
          container-registry-password: ${{ secrets.GHCR_CREDENTIALS_PASSWORD }}

      - name: Setup simulator push secret
        uses: azure/k8s-create-secret@v5
        with:
          namespace: ${{ vars.CLUSTER_NAMESPACE }}
          secret-name: cosmotech-modeling-api-simulator-secret-${{ matrix.imageTag }}
          container-registry-url: ${{ secrets.ACR_CREDENTIALS_USERNAME }}.azurecr.io
          container-registry-username: ${{ secrets.ACR_CREDENTIALS_USERNAME }}
          container-registry-password: ${{ secrets.ACR_CREDENTIALS_PASSWORD }}

      - name: Helm upgrade/install
        run: >
          helm upgrade
          --install
          --wait
          --namespace ${{ vars.CLUSTER_NAMESPACE }}
          --reset-values
          --values deploy_values/warp.yaml
          --set image.tag="${{ matrix.imageTag }}"
          --set image.credentials.pullSecret=cosmotech-modeling-api-image-secret-${{ matrix.imageTag }}
          --set config.csm.modelingApi.simulatorRegistry.host=${{ secrets.ACR_CREDENTIALS_USERNAME }}.azurecr.io
          --set config.csm.modelingApi.simulatorRegistry.pushSecret=cosmotech-modeling-api-simulator-secret-${{ matrix.imageTag }}
          cosmotech-modeling-api-${{ matrix.imageTag }}
          oci://ghcr.io/cosmo-tech/cosmotech-modeling-api-chart
          --version $CHART_VERSION

      - name: Helm test
        run: |
          helm test --namespace ${{ vars.CLUSTER_NAMESPACE }} cosmotech-modeling-api-${{ matrix.imageTag }}
