# SPDX-FileCopyrightText: Copyright (C) 2022-2025 Cosmo Tech
# SPDX-License-Identifier: MIT
name: Modeling API / Chart deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - charts/cosmotech-modeling-api/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: modeling_api_warp
    strategy:
      fail-fast: false
      matrix:
        imageTag:
          - continuous
          - nightly
    steps:
      - uses: actions/checkout@v4

      - uses: azure/setup-helm@v4

      - uses: azure/login@v2
        with:
          creds: "${{ secrets.AZURE_CREDENTIALS }}"

      - uses: azure/use-kubelogin@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          kubelogin-version: 'latest'

      - uses: azure/aks-set-context@v4
        with:
          cluster-name: "${{ vars.CLUSTER_NAME }}"
          resource-group: "${{ vars.CLUSTER_RESOURCE_GROUP }}"
          use-kubelogin: true

      - name: Setup image pull secret
        uses: azure/k8s-create-secret@v5
        with:
          namespace: ${{ vars.CLUSTER_NAMESPACE }}
          secret-name: cosmotech-modeling-api-image-secret-${{ matrix.imageTag }}
          container-registry-url: ghcr.io
          container-registry-username: ${{ secrets.GHCR_CREDENTIALS_USERNAME }}
          container-registry-password: ${{ secrets.GHCR_CREDENTIALS_PASSWORD }}

      - name: Setup simulator push secret
        uses: azure/k8s-create-secret@v5
        with:
          namespace: ${{ vars.CLUSTER_NAMESPACE }}
          secret-name: cosmotech-modeling-api-simulator-secret-${{ matrix.imageTag }}
          container-registry-url: ${{ secrets.ACR_CREDENTIALS_USERNAME }}.azurecr.io
          container-registry-username: ${{ secrets.ACR_CREDENTIALS_USERNAME }}
          container-registry-password: ${{ secrets.ACR_CREDENTIALS_PASSWORD }}

      - name: Helm package
        run: >
          helm package
          --destination ${{ runner.temp }}/package
          charts/cosmotech-modeling-api/

      - name: Write helm values
        run: |
          echo "${{ vars.HELM_VALUES }}" > values.yaml
          cat values.yaml

      - name: Helm upgrade/install
        run: >
          helm upgrade
          --install
          --wait
          --namespace ${{ vars.CLUSTER_NAMESPACE }}
          --reset-values
          --values values.yaml
          --set image.tag="${{ matrix.imageTag }}"
          --set image.credentials.pullSecret=cosmotech-modeling-api-image-secret-${{ matrix.imageTag }}
          --set config.csm.modelingApi.simulatorRegistry.host=${{ secrets.ACR_CREDENTIALS_USERNAME }}.azurecr.io
          --set config.csm.modelingApi.simulatorRegistry.pushSecret=cosmotech-modeling-api-simulator-secret-${{ matrix.imageTag }}
          cosmotech-modeling-api-${{ matrix.imageTag }}
          ${{ runner.temp }}/package/cosmotech-modeling-api-*.tgz

      - name: Helm test
        run: >
          helm test
          --namespace ${{ vars.CLUSTER_NAMESPACE }}
          cosmotech-modeling-api-${{ matrix.imageTag }}
